{{- if .Values.rabbitmq.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "santiway.fullname" . }}-rabbit
  labels:
    {{- include "santiway.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "santiway.fullname" . }}-rabbit
  replicas: {{ .Values.rabbitmq.replicas }}
  selector:
    matchLabels:
      app: {{ include "santiway.fullname" . }}-rabbit
  template:
    metadata:
      labels:
        app: {{ include "santiway.fullname" . }}-rabbit
        {{- include "santiway.labels" . | nindent 8 }}
    spec:
      containers:
        - name: rabbitmq
          image: {{ .Values.rabbitmq.image }}
          ports:
            - containerPort: 5672
            - containerPort: 15672
          env:
            - name: RABBITMQ_DEFAULT_USER
              valueFrom: { secretKeyRef: { name: {{ include "santiway.fullname" . }}-rabbit, key: username } }
            - name: RABBITMQ_DEFAULT_PASS
              valueFrom: { secretKeyRef: { name: {{ include "santiway.fullname" . }}-rabbit, key: password } }
          volumeMounts:
            - name: data
              mountPath: /var/lib/rabbitmq
          readinessProbe:
            tcpSocket: { port: 5672 }
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            tcpSocket: { port: 5672 }
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            {{- toYaml .Values.rabbitmq.resources | nindent 12 }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        {{- if .Values.storageClassName }}
        storageClassName: {{ .Values.storageClassName }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.rabbitmq.storage.size }}
{{- end }}
