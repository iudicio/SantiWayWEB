namespace: santiway

global:
  imageRegistry: ghcr.io
  security:
    allowInsecureImages: true

images:
  web:
    repository: ghcr.io/iudicio/santiway-web
    tag: "latest"
    pullPolicy: Always
  vendor:
    repository: ghcr.io/iudicio/santiway-vendor
    tag: "latest"
    pullPolicy: IfNotPresent
  eswriter:
    repository: ghcr.io/iudicio/santiway-eswriter
    tag: "latest"
    pullPolicy: IfNotPresent

web:
  replicas: 1
  port: 80            
  targetPort: 8000
  command: ["gunicorn"]
  args: ["SantiWayWEB.wsgi:application","--bind","0.0.0.0:8000","--workers","1"]
  env:
    UVICORN_HOST: "0.0.0.0"
    UVICORN_PORT: "8000"

    DEBUG: "1"
    CSRF_TRUSTED_ORIGINS: "http://localhost,http://127.0.0.1"
    ALLOWED_HOSTS: "*"
    DJANGO_SETTINGS_MODULE: "SantiWayWEB.settings"
    DJANGO_SUPERUSER_EMAIL: "admin@example.com"

    ES_URL: "http://elasticsearch:9200"
    ES_HEAP: "512m"

    CELERY_WORKER_NAME: "worker"
    CELERY_QUEUE: "process_queue"
    CELERY_LOG_LEVEL: "info"
    CELERY_RESULT_BACKEND: "rpc://"
  secrets:
    SECRET_KEY: "123dsada2e1e2dafaeq3e"
    DJANGO_SUPERUSER_PASSWORD: "admin"
  resources: {}
  ingress:
    enabled: true
    className: nginx
    hosts:
      - host: localhost
        paths:
          - path: /
            pathType: Prefix
    tls: []  # для локалки можно без TLS

vendor:
  replicas: 1
  env:
    ELASTICSEARCH_URL: "http://elasticsearch:9200"
    CELERY_CONSUMER_NAME: "Vendor"
    CELERY_C_TASK_NAME: "vendor"
    CELERY_C_QUEUE_NAME: "vendor_queue"
    CELERY_P_TASK_NAME: "esWriter"
    CELERY_P_QUEUE_NAME: "esWriter_queue"
    CELERY_LOG_LEVEL: "INFO"
  secrets: {}
  command: ["sh","-c"]
  args:
    - >
      celery -A celery_app worker
      -Q "$CELERY_C_QUEUE_NAME"
      -n "$CELERY_CONSUMER_NAME"
      -l "$CELERY_LOG_LEVEL"
  resources: {}

eswriter:
  replicas: 1
  env:
    # из .env.example
    CELERY_CONSUMER_NAME: "esWriter"
    CELERY_C_TASK_NAME: "esWriter"
    CELERY_C_QUEUE_NAME: "esWriter_queue"
    CELERY_LOG_LEVEL: "INFO"
    ES_HOST: "http://elasticsearch:9200"
    ES_USER: ""          # при необходимости задай
  # Секреты — попадут в Secret
  secrets:
    ES_PASSWORD: ""
  command: ["sh","-c"]
  args:
    - >
      celery -A celery_app worker
      -Q "$CELERY_C_QUEUE_NAME"
      -n "$CELERY_CONSUMER_NAME"
      -c 1
      -l "$CELERY_LOG_LEVEL"
  resources: {}
  probes:
    enabled: false

imagePullSecrets: []  # если приватные реестры — добавь сюда

commonLabels: {}
commonAnnotations: {}

storageClassName: "hostpath"

postgresql:
  enabled: true
  image: "postgres:16-alpine"
  replicas: 1
  storage:
    size: 5Gi
  auth:
    username: santi
    password: santi 
    database: santi
  resources: {}
  service:
    port: 5432

rabbitmq:
  enabled: true
  image: "rabbitmq:3.13-management"
  replicas: 1
  storage:
    size: 2Gi
  auth:
    username: celery
    password: celerypassword
  resources: {}
  service:
    amqpPort: 5672
    managementPort: 15672
